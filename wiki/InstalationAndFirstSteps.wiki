# Instalation and first steps

= Introduction =

All you need to get your system runnning, in a couple commands.


= writing image on CF =

 * *download the image splitted files* from http://code.google.com/p/debian-for-alix/downloads/list

 * *concatenate them to a single image file *

`cat debian-alix-cf2g.img.gz-split-* > debian-alix-cf2g.img.gz`

 * *verify the checksum of debian-alix-cf2g.img.gz* _this step is not required, but recommended to avoid broken files._

`sha1sum debian-alix-cf2g.img.gz`  

_or_  

`md5sum debian-alix-cf2g.img.gz`  

_and compare against published sha1sum or md5sum on downloads section._

 * *write it on a 2GB (or bigger) compact flash*

`zcat debian-alix-cf2g.img.gz | dd of=/dev/sdX bs=16k`

_/dev/sdX maybe /dev/sda, /dev/sdb, /dev/sdc ... according your environment_

example
{{{

wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-00
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-01
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-02
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-03
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-04
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-05
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-06
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-07
wget -S http://debian-for-alix.googlecode.com/files/debian-alix-cf2g.img.gz-split-08
wget -S http://debian-for-alix.googlecode.com/files/sha1sum

cat debian-alix-cf2g.img.gz-split-* > debian-alix-cf2g.img.gz

egrep debian-alix-cf2g.img.gz$ sha1sum

sha1sum debian-alix-cf2g.img.gz

zcat debian-alix-cf2g.img.gz | dd of=/dev/sdb bs=16k

}}}

= first boot pre-configured settings =

*ALIX2D13* and *ALIX2D3* (3 RJ45 connectors)

*ALIX2D2* also works well without changes, obviously *eth2* won't load, but LAN configuration was made over *br0*

http://debian-for-alix.googlecode.com/files/ALIX2D13_LAN_SETTINGS.jpg

 * serial port: 38400n8
 * WAN IP: dhcp ( *eth0* )
 * LAN IP: *172.16.210.254*/255.255.255.0 ( *br0* => *eth1* and *eth2* )
 * hostname: alix.site
 * ssh server: 22 (default port)
 * *root* password: *123456*
 * char set: en_US.UTF8
 * LAN dhcp server: 172.16.210.121 - 172.16.210.200
 * WLAN: disable by default, because many people doesn't have one

= save your changes =

The "/" partition is the union of "/ro" (persistent) and "/rw" (volatile), then by default all of your changes over "/" will be saved on "/rw", keeping "/ro" unchanged, so changes will be lost every boot. 

I'll show you two ways to persist you changes:

* 1: move changed files from volatile to persistent partition*
 * do changes normally over / structure (edit files, run commands, restart services, do tests)
 * run *remountrw* to enable write on /ro
 * *move* changed files *from* /rw *to* /ro
 * run *remountro* to disable write on /ro

example

{{{
nano /etc/default/transmission-daemon
nano /var/lib/transmission/settings.json.template
remountrw
mv /rw/etc/default/transmission-daemon /ro/etc/default/
mv /rw/var/lib/transmission/settings.json.template /ro/var/lib/transmission/
remountro
}}}
 
* 2: use chroot environment write direct over /ro partition *

_recommended to install/update/remove applications and complex changes involving many files_

 * run *remountrw* to enable write on /ro
 * run *rebind on* to mount system partitions under chrooted environment
 * run *chroot /ro* to enter in chroot environment, "/ro" will be shown as "/"
 * do your changes, they'll be saved direct on persistent partition
 * run *exit* to get out chrooted environment and back to the true "/" environment
 * run *rebind off* to umount system partitions under chrooted environment
 * run *remountro* to disable write on /ro

example
{{{
remountrw
rebind on
chroot /ro
apt-get update
apt-get -y upgrade
apt-get clean
history -c
exit
rebind off
remountro
}}}

_when your changes restart some service while you are inside chroot environment, you'll probably need run *lsof /ro* to find process that are locking resources and kill them before successfully use *rebind off* and *remountro*_

_If commands before don't help you, at last option reboot system, so is strongly recommeded run *fsck -a /dev/sda1* after system boots_