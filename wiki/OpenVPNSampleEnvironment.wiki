
I did a quickly test using routed subnets 

routed -> each side use a distinct IP range
bridged -> both side use the same IP range


== OpenVPN Server ==
* public host -> alixfordebian2012.dnsalias.com
* VPN range   -> 10.80.65.0  / 255.255.255.0
* LAN range   -> 172.16.10.0 / 255.255.255.0

== OpenVPN Client  (client1) ==
* LAN range   -> 192.168.100.0 / 255.255.255.0


Certificates and keys was created on server using easy-rsa, this tool is provided by OpenVPN under /usr/share/doc/openvpn/examples/easy-rsa/2.0/, generated files was stored in sub directory ./keys.
See http://openvpn.net/index.php/open-source/documentation/howto.html#pki

{{{
***** SERVER SIDE FILES ******
/etc/openvpn/server.conf
/etc/openvpn/ccd/client1
/etc/openvpn/keys/dh1024.pem
/etc/openvpn/keys/server.key
/etc/openvpn/keys/server.crt
/etc/openvpn/keys/ca.crt


***** CLIENT SIDE FILES ******
/etc/openvpn/client.conf
/etc/openvpn/keys/ca.crt
/etc/openvpn/keys/client1.crt
/etc/openvpn/keys/client1.key


**** server.conf CONTENT *****
port 1194
proto udp
dev tun
ca keys/ca.crt
cert keys/server.crt
key keys/server.key
dh keys/dh1024.pem
server 10.80.65.0 255.255.255.0
ifconfig-pool-persist /var/spool/ipp.txt
push "route 172.16.10.0 255.255.255.0"
client-config-dir ccd
route 192.168.100.0 255.255.255.0
client-to-client
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn-status.log
verb 3


**** client1 CONTENT     ******
iroute 192.168.100.0 255.255.255.0


**** client.conf CONTENT ******
client
dev tun
proto udp
remote alixfordebian2012.dnsalias.com 1194
resolv-retry infinite
nobind
user nobody
group nogroup
persist-key
persist-tun
ca keys/ca.crt
cert keys/client1.crt
key keys/client1.key
ns-cert-type server
comp-lzo
verb 3
}}}

The needed routes was automatically created at service start(/etc/init.d/openvpn), both network hosts turned available to it other.  (of course, ip forward needs to be turned on)